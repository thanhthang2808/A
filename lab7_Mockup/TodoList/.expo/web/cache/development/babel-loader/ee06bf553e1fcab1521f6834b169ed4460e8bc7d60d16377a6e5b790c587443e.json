{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useEffect, useState } from \"react\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Screen3(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    job = _useState4[0],\n    setJob = _useState4[1];\n  useEffect(function () {\n    setData(route.params.insertJob);\n  }, []);\n  var route = useRoute();\n  var handleInsertJob = function handleInsertJob() {\n    if (job !== \"\") {\n      data.jobs.push(job);\n      fetch(`https://653f261d9e8bd3be29e000fc.mockapi.io/data/${data.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (updatedUser) {\n        setData(updatedUser);\n      });\n      navigation.navigate(\"Screen2\");\n    } else {\n      alert(\"Please input 1 job!\");\n    }\n  };\n  console.log(data);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.viewAvatar,\n      children: [_jsx(Image, {\n        source: {\n          uri: data.avatar\n        },\n        style: {\n          height: 50,\n          width: 50\n        }\n      }), _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: {\n            width: 101,\n            height: 30,\n            marginLeft: 10,\n            fontFamily: \"Epilogue\",\n            fontSize: 14,\n            fontWeight: 700,\n            marginTop: 20\n          },\n          children: [\"Hi \", data.name]\n        }), _jsx(Text, {\n          style: {\n            fontWeight: 500,\n            top: -12,\n            left: 10\n          },\n          children: \"Have a great day a head\"\n        })]\n      })]\n    }), _jsx(Text, {\n      style: {\n        width: \"80%\",\n        height: 48,\n        fontSize: 32,\n        fontWeight: 700,\n        textAlign: \"center\",\n        marginTop: 10\n      },\n      children: \"ADD YOUR JOB\"\n    }), _jsxs(View, {\n      style: styles.viewInputJob,\n      children: [_jsx(Image, {\n        source: require(\"./image/IconInPutJob.png\"),\n        style: {\n          width: 20,\n          height: 20,\n          left: 10\n        }\n      }), _jsx(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return setJob(text);\n        },\n        placeholder: \"Input your job\",\n        style: {\n          outline: \"none\",\n          marginLeft: 30,\n          width: 250,\n          height: 43,\n          fontSize: 18,\n          fontWeight: 400,\n          color: \"gray\",\n          outline: \"none\"\n        }\n      })]\n    }), _jsx(Pressable, {\n      onPress: handleInsertJob,\n      style: styles.btn,\n      children: _jsx(Text, {\n        style: {\n          fontSize: 25,\n          fontWeight: 600,\n          alignSelf: \"center\",\n          color: \"white\"\n        },\n        children: \"Finish\"\n      })\n    }), _jsx(Image, {\n      source: require(\"./image/noteandpen.PNG\"),\n      style: {\n        width: 190,\n        height: 170,\n        marginTop: 50\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  btn: {\n    marginTop: 40,\n    width: 190,\n    height: 44,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#00BDD6\",\n    color: \"white\",\n    borderRadius: 15\n  },\n  viewAvatar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 80,\n    width: 100,\n    marginLeft: -80\n  },\n  viewInputJob: {\n    flexDirection: \"row\",\n    borderWidth: 2,\n    borderColor: \"grey\",\n    width: 334,\n    height: 44,\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    margin: 40\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Image","TextInput","Pressable","useEffect","useState","useRoute","jsx","_jsx","jsxs","_jsxs","Screen3","_ref","navigation","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","job","setJob","route","params","insertJob","handleInsertJob","jobs","push","fetch","id","method","headers","body","JSON","stringify","then","response","json","updatedUser","navigate","alert","console","log","style","styles","container","children","viewAvatar","source","uri","avatar","height","width","marginLeft","fontFamily","fontSize","fontWeight","marginTop","name","top","left","textAlign","viewInputJob","require","onChangeText","text","placeholder","outline","color","onPress","btn","alignSelf","create","flex","backgroundColor","alignItems","flexDirection","justifyContent","borderRadius","borderWidth","borderColor","margin"],"sources":["C:/Users/user/Downloads/TestReact-main/lab7_TaskManager/component/Screen3.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Pressable,\r\n} from \"react-native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nexport default function Screen3({ navigation }) {\r\n  var [data, setData] = useState([]);\r\n  const [job, setJob] = useState(\"\");\r\n  useEffect(() => {\r\n    setData(route.params.insertJob);\r\n  }, []);\r\n  var route = useRoute();\r\n  var handleInsertJob = () => {\r\n    if (job !== \"\") {\r\n      data.jobs.push(job);\r\n      fetch(`https://653f261d9e8bd3be29e000fc.mockapi.io/data/${data.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((updatedUser) => {\r\n          setData(updatedUser);\r\n        });\r\n      navigation.navigate(\"Screen2\");\r\n    } else {\r\n      alert(\"Please input 1 job!\");\r\n    }\r\n  };\r\n\r\n  console.log(data);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.viewAvatar}>\r\n        <Image\r\n          source={{ uri: data.avatar }}\r\n          style={{ height: 50, width: 50 }}\r\n        ></Image>\r\n        <View>\r\n          <Text\r\n            style={{\r\n              width: 101,\r\n              height: 30,\r\n              marginLeft: 10,\r\n              fontFamily: \"Epilogue\",\r\n              fontSize: 14,\r\n              fontWeight: 700,\r\n              marginTop: 20,\r\n            }}\r\n          >\r\n            Hi {data.name}\r\n          </Text>\r\n          <Text style={{ fontWeight: 500, top: -12, left: 10 }}>\r\n            Have a great day a head\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      <Text\r\n        style={{\r\n          width: \"80%\",\r\n          height: 48,\r\n          fontSize: 32,\r\n          fontWeight: 700,\r\n          textAlign: \"center\",\r\n          marginTop: 10,\r\n        }}\r\n      >\r\n        ADD YOUR JOB\r\n      </Text>\r\n      <View style={styles.viewInputJob}>\r\n        <Image\r\n          source={require(\"./image/IconInPutJob.png\")}\r\n          style={{ width: 20, height: 20, left: 10 }}\r\n        ></Image>\r\n        <TextInput\r\n          onChangeText={(text) => setJob(text)}\r\n          placeholder=\"Input your job\"\r\n          style={{\r\n            outline: \"none\",\r\n            marginLeft: 30,\r\n            width: 250,\r\n            height: 43,\r\n            fontSize: 18,\r\n            fontWeight: 400,\r\n            color: \"gray\",\r\n            outline: \"none\",\r\n          }}\r\n        ></TextInput>\r\n      </View>\r\n      <Pressable onPress={handleInsertJob} style={styles.btn}>\r\n        <Text\r\n          style={{\r\n            fontSize: 25,\r\n            fontWeight: 600,\r\n            alignSelf: \"center\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          Finish\r\n        </Text>\r\n      </Pressable>\r\n      <Image\r\n        source={require(\"./image/noteandpen.PNG\")}\r\n        style={{ width: 190, height: 170, marginTop: 50 }}\r\n      ></Image>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  btn: {\r\n    marginTop: 40,\r\n    width: 190,\r\n    height: 44,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#00BDD6\",\r\n    color: \"white\",\r\n    borderRadius: 15,\r\n  },\r\n  viewAvatar: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 80,\r\n    width: 100,\r\n    marginLeft: -80,\r\n  },\r\n  viewInputJob: {\r\n    flexDirection: \"row\",\r\n    borderWidth: 2,\r\n    borderColor: \"grey\",\r\n    width: 334,\r\n    height: 44,\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    margin: 40,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}